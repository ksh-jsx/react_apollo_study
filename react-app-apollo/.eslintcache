[{"C:\\Users\\shkim\\Desktop\\git_2021\\react-app-apollo\\src\\routes\\Home.js":"1","C:\\Users\\shkim\\Desktop\\git_2021\\react-app-apollo\\src\\routes\\Detail.js":"2","C:\\Users\\shkim\\Desktop\\git_2021\\react-app-apollo\\src\\index.js":"3","C:\\Users\\shkim\\Desktop\\git_2021\\react-app-apollo\\src\\apollo.js":"4","C:\\Users\\shkim\\Desktop\\git_2021\\react-app-apollo\\src\\components\\App.js":"5","C:\\Users\\shkim\\Desktop\\git_2021\\react-app-apollo\\src\\components\\Movie.js":"6"},{"size":5548,"mtime":1613225708240,"results":"7","hashOfConfig":"8"},{"size":1929,"mtime":1613033212963,"results":"9","hashOfConfig":"8"},{"size":437,"mtime":1612878750702,"results":"10","hashOfConfig":"8"},{"size":144,"mtime":1612681759880,"results":"11","hashOfConfig":"8"},{"size":369,"mtime":1613030187297,"results":"12","hashOfConfig":"8"},{"size":618,"mtime":1612681759887,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"115foix",{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\shkim\\Desktop\\git_2021\\react-app-apollo\\src\\routes\\Home.js",["27","28","29","30","31","32","33"],"C:\\Users\\shkim\\Desktop\\git_2021\\react-app-apollo\\src\\routes\\Detail.js",["34"],"import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport styled from \"styled-components\";\r\nimport Movie from \"../components/Movie\";\r\n\r\nconst GET_MOVIE = gql`\r\n  query getMovie($id: Int!) {\r\n    movie(id: $id) {\r\n      title\r\n      medium_cover_image\r\n      language\r\n      rating\r\n      description_intro\r\n    }\r\n    suggestions(id: $id) {\r\n      id\r\n      medium_cover_image\r\n    }\r\n  }\r\n`;\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  background-image: linear-gradient(-45deg, #d754ab, #fd723a);\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  color: white;\r\n`;\r\n\r\nconst Column = styled.div`\r\n  margin-left: 10px;\r\n  width: 50%;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 65px;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst Subtitle = styled.h4`\r\n  font-size: 35px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst Description = styled.p`\r\n  font-size: 28px;\r\n`;\r\n\r\nconst Poster = styled.div`\r\n  width: 25%;\r\n  height: 60%;\r\n  background-color: transparent;\r\n  background-image: url(${props => props.bg});\r\n  background-size: cover;\r\n  background-position: center center;\r\n`;\r\n\r\nexport default () => {\r\n  let { id } = useParams();\r\n  const { loading, data } = useQuery(GET_MOVIE, {\r\n    variables: { id: parseInt(id) }\r\n  });\r\n  return (\r\n    <>\r\n    <Container>\r\n      <Column>\r\n        <Title>{loading ? \"Loading...\" : data.movie.title}</Title>\r\n        <Subtitle>\r\n          {data?.movie?.language} Â· {data?.movie?.rating}\r\n        </Subtitle>\r\n        <Description>{data?.movie?.description_intro}</Description>\r\n      </Column>\r\n      <Poster bg={data?.movie?.medium_cover_image}></Poster>\r\n    </Container>\r\n    <Container>\r\n    {data?.suggestions?.map(m => (\r\n        <Movie key={m.id} id={m.id} bg={m.medium_cover_image} />\r\n    ))}\r\n    </Container>\r\n    </>\r\n  );\r\n};","C:\\Users\\shkim\\Desktop\\git_2021\\react-app-apollo\\src\\index.js",[],"C:\\Users\\shkim\\Desktop\\git_2021\\react-app-apollo\\src\\apollo.js",[],"C:\\Users\\shkim\\Desktop\\git_2021\\react-app-apollo\\src\\components\\App.js",[],"C:\\Users\\shkim\\Desktop\\git_2021\\react-app-apollo\\src\\components\\Movie.js",["35"],{"ruleId":"36","severity":1,"message":"37","line":2,"column":26,"nodeType":"38","messageId":"39","endLine":2,"endColumn":35},{"ruleId":"36","severity":1,"message":"40","line":6,"column":18,"nodeType":"38","messageId":"39","endLine":6,"endColumn":27},{"ruleId":"36","severity":1,"message":"41","line":132,"column":20,"nodeType":"38","messageId":"39","endLine":132,"endColumn":24},{"ruleId":"36","severity":1,"message":"42","line":132,"column":26,"nodeType":"38","messageId":"39","endLine":132,"endColumn":31},{"ruleId":"36","severity":1,"message":"43","line":136,"column":11,"nodeType":"38","messageId":"39","endLine":136,"endColumn":19},{"ruleId":"36","severity":1,"message":"44","line":136,"column":21,"nodeType":"38","messageId":"39","endLine":136,"endColumn":26},{"ruleId":"45","severity":1,"message":"46","line":178,"column":5,"nodeType":"47","endLine":178,"endColumn":17,"suggestions":"48"},{"ruleId":"49","severity":1,"message":"50","line":62,"column":1,"nodeType":"51","endLine":86,"endColumn":3},{"ruleId":"49","severity":1,"message":"50","line":21,"column":1,"nodeType":"51","endLine":27,"endColumn":3},"no-unused-vars","'createRef' is defined but never used.","Identifier","unusedVar","'keyframes' is defined but never used.","'data' is assigned a value but never used.","'error' is assigned a value but never used.","'loading2' is assigned a value but never used.","'data2' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getScrollPosition'. Either include it or remove the dependency array.","ArrayExpression",["52"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",{"desc":"53","fix":"54"},"Update the dependencies array to be: [getScrollPosition, list, list2]",{"range":"55","text":"56"},[4254,4266],"[getScrollPosition, list, list2]"]